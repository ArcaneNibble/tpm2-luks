diff -aur ibmtss-orig/utils/makefile ibmtss/utils/makefile
--- ibmtss-orig/utils/makefile	2017-01-27 15:22:40.000000000 +0000
+++ ibmtss/utils/makefile	2017-02-12 05:36:44.576368858 +0000
@@ -44,7 +44,7 @@
 
 # compile - common flags for TSS library and applications
 
-CCFLAGS = 	-DTPM_POSIX
+CCFLAGS = 	-DTPM_POSIX  -DTPM_INTERFACE_TYPE_DEFAULT="\"dev\"" -DTPM_ENCRYPT_SESSIONS_DEFAULT="\"0\""
 
 # example of pointing to a locally built openssl 1.1
 # CCFLAGS += 	-I/home/kgold/openssl-1.1.0c/include
@@ -56,9 +56,6 @@
 # to compile out printf's (regression test will fail) because it tries to print a structure
 # -DTPM_NO_PRINT
 
-# example of changing the default interface type
-#	-DTPM_INTERFACE_TYPE_DEFAULT="\"dev\""
-
 # compile - for applications
 
 CCAFLAGS = 	-I.
@@ -83,13 +80,14 @@
 
 # link - for applications, TSS path, TSS and OpenSSl libraries
 
-LNAFLAGS = -Wl,-rpath,.
+LNAFLAGS =
+#LNAFLAGS = -Wl,-rpath,.
 
 LNALIBS =  -ltss -lcrypto
 
 # shared library
 
-LIBTSS=libtss.so
+LIBTSS=libtss.a
 
 # executable extension
 
@@ -116,50 +114,51 @@
 # TSS shared library source
 
 tss.o: 		$(TSS_HEADERS) tss.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tss.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tss.c
 tssproperties.o: $(TSS_HEADERS) tssproperties.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssproperties.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssproperties.c
 tssauth.o: 	$(TSS_HEADERS) tssauth.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssauth.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssauth.c
 tssmarshal.o: 	$(TSS_HEADERS) tssmarshal.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssmarshal.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssmarshal.c
 tsscryptoh.o: 	$(TSS_HEADERS) tsscryptoh.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tsscryptoh.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tsscryptoh.c
 tsscrypto.o: 	$(TSS_HEADERS) tsscrypto.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tsscrypto.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tsscrypto.c
 tssutils.o: 	$(TSS_HEADERS) tssutils.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssutils.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssutils.c
 tssfile.o: 	$(TSS_HEADERS) tssfile.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssfile.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssfile.c
 tsssocket.o: 	$(TSS_HEADERS) tsssocket.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tsssocket.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tsssocket.c
 tssdev.o: 	$(TSS_HEADERS) tssdev.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssdev.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssdev.c
 tsstransmit.o: 	$(TSS_HEADERS) tsstransmit.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tsstransmit.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tsstransmit.c
 tssresponsecode.o: $(TSS_HEADERS) tssresponsecode.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssresponsecode.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssresponsecode.c
 tssccattributes.o: $(TSS_HEADERS) tssccattributes.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssccattributes.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssccattributes.c
 fail.o: 	$(TSS_HEADERS) fail.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC fail.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) fail.c
 tssprint.o: 	$(TSS_HEADERS) tssprint.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssprint.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssprint.c
 Unmarshal.o: 	$(TSS_HEADERS) Unmarshal.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC Unmarshal.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) Unmarshal.c
 Commands.o: 	$(TSS_HEADERS) Commands.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC Commands.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) Commands.c
 CommandAttributeData.o: 	$(TSS_HEADERS) CommandAttributeData.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC CommandAttributeData.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) CommandAttributeData.c
 ntc2lib.o:	$(TSS_HEADERS) ntc2lib.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC ntc2lib.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) ntc2lib.c
 tssntc.o:	$(TSS_HEADERS) tssntc.c
-		$(CC) $(CCFLAGS) $(CCLFLAGS) -fPIC tssntc.c
+		$(CC) $(CCFLAGS) $(CCLFLAGS) tssntc.c
 
 # TSS shared library build
 
 $(LIBTSS): 	$(TSS_OBJS)
-		$(CC) $(LNFLAGS) $(LNLFLAGS) -shared -o $(LIBTSS) $(TSS_OBJS)
+		ar rcs $(LIBTSS) $(TSS_OBJS)
+#		$(CC) $(LNFLAGS) $(LNLFLAGS) -shared -o $(LIBTSS) $(TSS_OBJS)
 
 .PHONY:		clean
 .PRECIOUS:	%.o
@@ -171,212 +170,212 @@
 
 # applications
 
-activatecredential:	tss2/tss.h activatecredential.o libtss.so
+activatecredential:	tss2/tss.h activatecredential.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) activatecredential.o $(LNALIBS) -o activatecredential
-eventextend:		eventextend.o eventlib.o libtss.so
+eventextend:		eventextend.o eventlib.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) eventextend.o eventlib.o $(LNALIBS) -o eventextend
-imaextend:		imaextend.o imalib.o libtss.so
+imaextend:		imaextend.o imalib.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) imaextend.o imalib.o $(LNALIBS) -o imaextend
-certify:		tss2/tss.h certify.o libtss.so
+certify:		tss2/tss.h certify.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) certify.o $(LNALIBS) -o certify
-changeeps:		tss2/tss.h changeeps.o libtss.so
+changeeps:		tss2/tss.h changeeps.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) changeeps.o $(LNALIBS) -o changeeps
-changepps:		tss2/tss.h changepps.o libtss.so
+changepps:		tss2/tss.h changepps.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) changepps.o $(LNALIBS) -o changepps
-clear:			tss2/tss.h clear.o libtss.so
+clear:			tss2/tss.h clear.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) clear.o $(LNALIBS) -o clear
-clearcontrol:		tss2/tss.h clearcontrol.o libtss.so
+clearcontrol:		tss2/tss.h clearcontrol.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) clearcontrol.o $(LNALIBS) -o clearcontrol
-clockrateadjust:	tss2/tss.h clockrateadjust.o libtss.so
+clockrateadjust:	tss2/tss.h clockrateadjust.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) clockrateadjust.o $(LNALIBS) -o clockrateadjust
-clockset:		tss2/tss.h clockset.o libtss.so
+clockset:		tss2/tss.h clockset.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) clockset.o $(LNALIBS) -o clockset
-contextload:		tss2/tss.h contextload.o libtss.so
+contextload:		tss2/tss.h contextload.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) contextload.o $(LNALIBS) -o contextload
-contextsave:		tss2/tss.h contextsave.o libtss.so
+contextsave:		tss2/tss.h contextsave.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) contextsave.o $(LNALIBS) -o contextsave
-create:			tss2/tss.h create.o objecttemplates.o libtss.so
+create:			tss2/tss.h create.o objecttemplates.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) create.o objecttemplates.o $(LNALIBS) -o create
-createloaded:		tss2/tss.h createloaded.o objecttemplates.o libtss.so
+createloaded:		tss2/tss.h createloaded.o objecttemplates.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) createloaded.o objecttemplates.o $(LNALIBS) -o createloaded
-createprimary:		tss2/tss.h createprimary.o objecttemplates.o libtss.so
+createprimary:		tss2/tss.h createprimary.o objecttemplates.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) createprimary.o objecttemplates.o $(LNALIBS) -o createprimary
-dictionaryattacklockreset:		tss2/tss.h dictionaryattacklockreset.o libtss.so
+dictionaryattacklockreset:		tss2/tss.h dictionaryattacklockreset.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) dictionaryattacklockreset.o $(LNALIBS) -o dictionaryattacklockreset
-dictionaryattackparameters:		tss2/tss.h dictionaryattackparameters.o libtss.so
+dictionaryattackparameters:		tss2/tss.h dictionaryattackparameters.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) dictionaryattackparameters.o $(LNALIBS) -o dictionaryattackparameters
-duplicate:		tss2/tss.h duplicate.o libtss.so
+duplicate:		tss2/tss.h duplicate.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) duplicate.o $(LNALIBS) -o duplicate 
-eccparameters:		tss2/tss.h eccparameters.o libtss.so
+eccparameters:		tss2/tss.h eccparameters.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) eccparameters.o $(LNALIBS) -o eccparameters 
-encryptdecrypt:		tss2/tss.h encryptdecrypt.o libtss.so
+encryptdecrypt:		tss2/tss.h encryptdecrypt.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) encryptdecrypt.o $(LNALIBS) -o encryptdecrypt	
-eventsequencecomplete:	tss2/tss.h eventsequencecomplete.o libtss.so
+eventsequencecomplete:	tss2/tss.h eventsequencecomplete.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) eventsequencecomplete.o $(LNALIBS) -o eventsequencecomplete	
-evictcontrol:		tss2/tss.h evictcontrol.o libtss.so
+evictcontrol:		tss2/tss.h evictcontrol.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) evictcontrol.o $(LNALIBS) -o evictcontrol	
-flushcontext:		tss2/tss.h flushcontext.o libtss.so
+flushcontext:		tss2/tss.h flushcontext.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) flushcontext.o $(LNALIBS) -o flushcontext
-getcommandauditdigest:	tss2/tss.h getcommandauditdigest.o libtss.so
+getcommandauditdigest:	tss2/tss.h getcommandauditdigest.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) getcommandauditdigest.o $(LNALIBS) -o getcommandauditdigest
-getcapability:		tss2/tss.h getcapability.o libtss.so
+getcapability:		tss2/tss.h getcapability.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) getcapability.o $(LNALIBS) -o getcapability
-getrandom:		tss2/tss.h getrandom.o libtss.so
+getrandom:		tss2/tss.h getrandom.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) getrandom.o $(LNALIBS) -o getrandom
-getsessionauditdigest:	tss2/tss.h getsessionauditdigest.o libtss.so
+getsessionauditdigest:	tss2/tss.h getsessionauditdigest.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) getsessionauditdigest.o $(LNALIBS) -o getsessionauditdigest
-gettime:		tss2/tss.h gettime.o libtss.so
+gettime:		tss2/tss.h gettime.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) gettime.o $(LNALIBS) -o gettime
-hashsequencestart:	tss2/tss.h hashsequencestart.o libtss.so
+hashsequencestart:	tss2/tss.h hashsequencestart.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hashsequencestart.o $(LNALIBS) -o hashsequencestart
-hash:			tss2/tss.h hash.o libtss.so
+hash:			tss2/tss.h hash.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hash.o $(LNALIBS) -o hash
-hierarchycontrol:	tss2/tss.h hierarchycontrol.o libtss.so
+hierarchycontrol:	tss2/tss.h hierarchycontrol.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hierarchycontrol.o $(LNALIBS) -o hierarchycontrol
-hierarchychangeauth:	tss2/tss.h hierarchychangeauth.o libtss.so
+hierarchychangeauth:	tss2/tss.h hierarchychangeauth.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hierarchychangeauth.o $(LNALIBS) -o hierarchychangeauth
-hmac:			tss2/tss.h hmac.o libtss.so
+hmac:			tss2/tss.h hmac.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hmac.o $(LNALIBS) -o hmac
-hmacstart:		tss2/tss.h hmacstart.o libtss.so
+hmacstart:		tss2/tss.h hmacstart.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) hmacstart.o $(LNALIBS) -o hmacstart
-import:			tss2/tss.h import.o libtss.so
+import:			tss2/tss.h import.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) import.o $(LNALIBS) -o import
-importpem:		tss2/tss.h importpem.o objecttemplates.o ekutils.o cryptoutils.o libtss.so
+importpem:		tss2/tss.h importpem.o objecttemplates.o ekutils.o cryptoutils.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) importpem.o objecttemplates.o ekutils.o cryptoutils.o $(LNALIBS) -o importpem
-load:			tss2/tss.h load.o libtss.so
+load:			tss2/tss.h load.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) load.o $(LNALIBS) -o load
-loadexternal:		tss2/tss.h loadexternal.o cryptoutils.o ekutils.o libtss.so
+loadexternal:		tss2/tss.h loadexternal.o cryptoutils.o ekutils.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) loadexternal.o cryptoutils.o ekutils.o $(LNALIBS) -o loadexternal
-makecredential:		tss2/tss.h makecredential.o libtss.so
+makecredential:		tss2/tss.h makecredential.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) makecredential.o $(LNALIBS) -o makecredential
-nvcertify:		tss2/tss.h nvcertify.o libtss.so
+nvcertify:		tss2/tss.h nvcertify.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvcertify.o $(LNALIBS) -o nvcertify
-nvchangeauth:		tss2/tss.h nvchangeauth.o libtss.so
+nvchangeauth:		tss2/tss.h nvchangeauth.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvchangeauth.o $(LNALIBS) -o nvchangeauth
-nvdefinespace:		tss2/tss.h nvdefinespace.o libtss.so
+nvdefinespace:		tss2/tss.h nvdefinespace.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvdefinespace.o $(LNALIBS) -o nvdefinespace
-nvextend:		tss2/tss.h nvextend.o libtss.so
+nvextend:		tss2/tss.h nvextend.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvextend.o $(LNALIBS) -o nvextend
-nvglobalwritelock:	tss2/tss.h nvglobalwritelock.o libtss.so
+nvglobalwritelock:	tss2/tss.h nvglobalwritelock.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvglobalwritelock.o $(LNALIBS) -o nvglobalwritelock
-nvincrement:		tss2/tss.h nvincrement.o libtss.so
+nvincrement:		tss2/tss.h nvincrement.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvincrement.o $(LNALIBS) -o nvincrement
-nvread:			tss2/tss.h nvread.o cryptoutils.o ekutils.o libtss.so
+nvread:			tss2/tss.h nvread.o cryptoutils.o ekutils.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvread.o cryptoutils.o ekutils.o $(LNALIBS) -o nvread
-nvreadlock:		tss2/tss.h nvreadlock.o libtss.so
+nvreadlock:		tss2/tss.h nvreadlock.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvreadlock.o $(LNALIBS) -o nvreadlock
-nvreadpublic:		tss2/tss.h nvreadpublic.o libtss.so
+nvreadpublic:		tss2/tss.h nvreadpublic.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvreadpublic.o $(LNALIBS) -o nvreadpublic
-nvsetbits:		tss2/tss.h nvsetbits.o libtss.so
+nvsetbits:		tss2/tss.h nvsetbits.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvsetbits.o $(LNALIBS) -o nvsetbits
-nvundefinespace:	tss2/tss.h nvundefinespace.o libtss.so
+nvundefinespace:	tss2/tss.h nvundefinespace.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvundefinespace.o $(LNALIBS) -o nvundefinespace
-nvundefinespacespecial:	tss2/tss.h nvundefinespacespecial.o libtss.so
+nvundefinespacespecial:	tss2/tss.h nvundefinespacespecial.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvundefinespacespecial.o $(LNALIBS) -o nvundefinespacespecial
-nvwrite:		tss2/tss.h nvwrite.o cryptoutils.o ekutils.o libtss.so
+nvwrite:		tss2/tss.h nvwrite.o cryptoutils.o ekutils.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvwrite.o cryptoutils.o ekutils.o $(LNALIBS) -o nvwrite
-nvwritelock:		tss2/tss.h nvwritelock.o libtss.so
+nvwritelock:		tss2/tss.h nvwritelock.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) nvwritelock.o $(LNALIBS) -o nvwritelock
-objectchangeauth:	tss2/tss.h objectchangeauth.o libtss.so
+objectchangeauth:	tss2/tss.h objectchangeauth.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) objectchangeauth.o $(LNALIBS) -o objectchangeauth
-pcrallocate: 		tss2/tss.h pcrallocate.o libtss.so
+pcrallocate: 		tss2/tss.h pcrallocate.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) pcrallocate.o $(LNALIBS) -o pcrallocate
-pcrevent: 		tss2/tss.h pcrevent.o libtss.so
+pcrevent: 		tss2/tss.h pcrevent.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) pcrevent.o $(LNALIBS) -o pcrevent
-pcrextend: 		tss2/tss.h pcrextend.o libtss.so
+pcrextend: 		tss2/tss.h pcrextend.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) pcrextend.o $(LNALIBS) -o pcrextend
-pcrread: 		tss2/tss.h pcrread.o libtss.so
+pcrread: 		tss2/tss.h pcrread.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) pcrread.o $(LNALIBS) -o pcrread
-pcrreset: 		tss2/tss.h pcrreset.o libtss.so
+pcrreset: 		tss2/tss.h pcrreset.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) pcrreset.o $(LNALIBS) -o pcrreset
-policyauthorize:	tss2/tss.h policyauthorize.o libtss.so
+policyauthorize:	tss2/tss.h policyauthorize.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyauthorize.o $(LNALIBS) -o policyauthorize
-policyauthvalue:	tss2/tss.h policyauthvalue.o libtss.so
+policyauthvalue:	tss2/tss.h policyauthvalue.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyauthvalue.o $(LNALIBS) -o policyauthvalue
-policycommandcode:	tss2/tss.h policycommandcode.o libtss.so
+policycommandcode:	tss2/tss.h policycommandcode.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policycommandcode.o $(LNALIBS) -o policycommandcode
-policycphash:		tss2/tss.h policycphash.o libtss.so
+policycphash:		tss2/tss.h policycphash.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policycphash.o $(LNALIBS) -o policycphash
-policycountertimer :	tss2/tss.h policycountertimer.o libtss.so
+policycountertimer :	tss2/tss.h policycountertimer.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policycountertimer.o $(LNALIBS) -o policycountertimer
-policygetdigest:	tss2/tss.h policygetdigest.o libtss.so
+policygetdigest:	tss2/tss.h policygetdigest.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policygetdigest.o $(LNALIBS) -o policygetdigest
-policymaker:		tss2/tss.h policymaker.o libtss.so
+policymaker:		tss2/tss.h policymaker.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policymaker.o $(LNALIBS) -o policymaker
-policymakerpcr:		tss2/tss.h policymakerpcr.o libtss.so
+policymakerpcr:		tss2/tss.h policymakerpcr.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policymakerpcr.o $(LNALIBS) -o policymakerpcr
-policyauthorizenv:	tss2/tss.h policyauthorizenv.o libtss.so
+policyauthorizenv:	tss2/tss.h policyauthorizenv.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyauthorizenv.o $(LNALIBS) -o policyauthorizenv
-policynv:		tss2/tss.h policynv.o libtss.so
+policynv:		tss2/tss.h policynv.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policynv.o $(LNALIBS) -o policynv
-policynvwritten:	tss2/tss.h policynvwritten.o libtss.so
+policynvwritten:	tss2/tss.h policynvwritten.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policynvwritten.o $(LNALIBS) -o policynvwritten
-policyor:		tss2/tss.h policyor.o libtss.so
+policyor:		tss2/tss.h policyor.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyor.o $(LNALIBS) -o policyor
-policypassword:		tss2/tss.h policypassword.o libtss.so
+policypassword:		tss2/tss.h policypassword.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policypassword.o $(LNALIBS) -o policypassword
-policypcr:		tss2/tss.h policypcr.o libtss.so
+policypcr:		tss2/tss.h policypcr.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policypcr.o $(LNALIBS) -o policypcr
-policyrestart:		tss2/tss.h policyrestart.o libtss.so
+policyrestart:		tss2/tss.h policyrestart.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyrestart.o $(LNALIBS) -o policyrestart
-policysigned:		tss2/tss.h policysigned.o libtss.so
+policysigned:		tss2/tss.h policysigned.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policysigned.o $(LNALIBS) -o policysigned
-policysecret:		tss2/tss.h policysecret.o libtss.so
+policysecret:		tss2/tss.h policysecret.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policysecret.o $(LNALIBS) -o policysecret
-policytemplate:		tss2/tss.h policytemplate.o libtss.so
+policytemplate:		tss2/tss.h policytemplate.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policytemplate.o $(LNALIBS) -o policytemplate
-policyticket:		tss2/tss.h policyticket.o libtss.so
+policyticket:		tss2/tss.h policyticket.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) policyticket.o $(LNALIBS) -o policyticket
-quote:			tss2/tss.h quote.o libtss.so
+quote:			tss2/tss.h quote.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) quote.o $(LNALIBS) -o quote
-powerup:		tss2/tss.h powerup.o libtss.so
+powerup:		tss2/tss.h powerup.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) powerup.o $(LNALIBS) -o powerup
-readclock:		tss2/tss.h readclock.o libtss.so
+readclock:		tss2/tss.h readclock.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) readclock.o $(LNALIBS) -o readclock
-readpublic:		tss2/tss.h readpublic.o libtss.so
+readpublic:		tss2/tss.h readpublic.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) readpublic.o $(LNALIBS) -o readpublic
-returncode:		tss2/tss.h returncode.o libtss.so
+returncode:		tss2/tss.h returncode.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) returncode.o $(LNALIBS) -o returncode
-rewrap:			tss2/tss.h rewrap.o libtss.so
+rewrap:			tss2/tss.h rewrap.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) rewrap.o $(LNALIBS) -o rewrap
-rsadecrypt: 		tss2/tss.h rsadecrypt.o libtss.so
+rsadecrypt: 		tss2/tss.h rsadecrypt.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) rsadecrypt.o $(LNALIBS) -o rsadecrypt
-rsaencrypt: 		tss2/tss.h rsaencrypt.o libtss.so
+rsaencrypt: 		tss2/tss.h rsaencrypt.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) rsaencrypt.o $(LNALIBS) -o rsaencrypt
-sequenceupdate:		tss2/tss.h sequenceupdate.o libtss.so
+sequenceupdate:		tss2/tss.h sequenceupdate.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) sequenceupdate.o $(LNALIBS) -o sequenceupdate
-sequencecomplete:	tss2/tss.h sequencecomplete.o libtss.so
+sequencecomplete:	tss2/tss.h sequencecomplete.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) sequencecomplete.o $(LNALIBS) -o sequencecomplete
-setprimarypolicy:	tss2/tss.h setprimarypolicy.o libtss.so
+setprimarypolicy:	tss2/tss.h setprimarypolicy.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) setprimarypolicy.o $(LNALIBS) -o setprimarypolicy
-shutdown:		tss2/tss.h shutdown.o libtss.so
+shutdown:		tss2/tss.h shutdown.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) shutdown.o $(LNALIBS) -o shutdown
-sign:			tss2/tss.h sign.o libtss.so
+sign:			tss2/tss.h sign.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) sign.o $(LNALIBS) -o sign
-startauthsession:	tss2/tss.h startauthsession.o libtss.so
+startauthsession:	tss2/tss.h startauthsession.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) startauthsession.o $(LNALIBS) -o startauthsession
-startup:		tss2/tss.h startup.o libtss.so
+startup:		tss2/tss.h startup.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) startup.o $(LNALIBS) -o startup
-stirrandom:		tss2/tss.h stirrandom.o libtss.so
+stirrandom:		tss2/tss.h stirrandom.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) stirrandom.o $(LNALIBS) -o stirrandom
-unseal:			tss2/tss.h unseal.o libtss.so
+unseal:			tss2/tss.h unseal.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) unseal.o $(LNALIBS) -o unseal
-verifysignature:	tss2/tss.h verifysignature.o libtss.so
+verifysignature:	tss2/tss.h verifysignature.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) verifysignature.o $(LNALIBS) -o verifysignature
-signapp:		tss2/tss.h signapp.o libtss.so
+signapp:		tss2/tss.h signapp.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) signapp.o $(LNALIBS) -o signapp
-writeapp:		tss2/tss.h writeapp.o libtss.so
+writeapp:		tss2/tss.h writeapp.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) writeapp.o $(LNALIBS) -o writeapp
-timepacket:		tss2/tss.h timepacket.o libtss.so
+timepacket:		tss2/tss.h timepacket.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) timepacket.o $(LNALIBS) -o timepacket
-createek:		createek.o ekutils.o libtss.so
+createek:		createek.o ekutils.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) createek.o cryptoutils.o ekutils.o $(LNALIBS) -o createek
 
-ntc2getconfig:		ntc2getconfig.o ntc2lib.o libtss.so
+ntc2getconfig:		ntc2getconfig.o ntc2lib.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) ntc2getconfig.o ntc2lib.o $(LNALIBS) -o ntc2getconfig
-ntc2preconfig:		ntc2preconfig.o ntc2lib.o libtss.so
+ntc2preconfig:		ntc2preconfig.o ntc2lib.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) ntc2preconfig.o ntc2lib.o $(LNALIBS) -o ntc2preconfig
-ntc2lockconfig:		ntc2lockconfig.o ntc2lib.o libtss.so
+ntc2lockconfig:		ntc2lockconfig.o ntc2lib.o libtss.a
 			$(CC) $(LNFLAGS) $(LNAFLAGS) ntc2lockconfig.o ntc2lib.o $(LNALIBS) -o ntc2lockconfig
 
 t:		t.o
diff -aur ibmtss-orig/utils/makefile-common ibmtss/utils/makefile-common
--- ibmtss-orig/utils/makefile-common	2017-01-27 15:22:40.000000000 +0000
+++ ibmtss/utils/makefile-common	2017-02-12 01:19:00.715293974 +0000
@@ -43,7 +43,7 @@
 
 CCFLAGS += 				\
 	-Wall -W -Wmissing-declarations -Wmissing-prototypes -Wnested-externs \
-	-ggdb -O0 -c
+	-ggdb -O2 -c
 
 # to compile with optimizations on (warning will result)
 #	-O3 -c
